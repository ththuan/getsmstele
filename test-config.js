const { ethers } = require('ethers');
const { Telegraf } = require('telegraf');
require('dotenv').config();

console.log('üîç Ki·ªÉm tra c·∫•u h√¨nh bot...\n');

// Ki·ªÉm tra bi·∫øn m√¥i tr∆∞·ªùng
const requiredVars = ['TELEGRAM_BOT_TOKEN', 'PRIVATE_KEY', 'SODEX_BASE_URL', 'SODEX_API_URL'];
let configValid = true;

console.log('üìã Ki·ªÉm tra bi·∫øn m√¥i tr∆∞·ªùng:');
for (const varName of requiredVars) {
    if (process.env[varName]) {
        console.log(`  ‚úÖ ${varName}: ${varName === 'PRIVATE_KEY' ? '[HIDDEN]' : process.env[varName]}`);
    } else {
        console.log(`  ‚ùå ${varName}: THI·∫æU`);
        configValid = false;
    }
}

if (!configValid) {
    console.log('\n‚ùå Vui l√≤ng c·∫•u h√¨nh ƒë·∫ßy ƒë·ªß file .env');
    process.exit(1);
}

// Ki·ªÉm tra private key v√† v√≠
console.log('\nüîê Ki·ªÉm tra v√≠:');
try {
    let privateKey = process.env.PRIVATE_KEY;
    if (!privateKey.startsWith('0x')) {
        privateKey = '0x' + privateKey;
    }
    
    const wallet = new ethers.Wallet(privateKey);
    console.log(`  ‚úÖ Private key h·ª£p l·ªá`);
    console.log(`  ‚úÖ ƒê·ªãa ch·ªâ v√≠: ${wallet.address}`);
} catch (error) {
    console.log(`  ‚ùå Private key kh√¥ng h·ª£p l·ªá: ${error.message}`);
    process.exit(1);
}

// Ki·ªÉm tra Telegram bot token
console.log('\nü§ñ Ki·ªÉm tra Telegram bot:');
try {
    const bot = new Telegraf(process.env.TELEGRAM_BOT_TOKEN);
    
    // Test connection
    bot.telegram.getMe()
        .then(botInfo => {
            console.log(`  ‚úÖ Bot token h·ª£p l·ªá`);
            console.log(`  ‚úÖ Bot name: @${botInfo.username}`);
            console.log(`  ‚úÖ Bot ID: ${botInfo.id}`);
            
            if (process.env.TELEGRAM_GROUP_ID) {
                console.log(`  ‚ÑπÔ∏è  S·∫Ω theo d√µi group: ${process.env.TELEGRAM_GROUP_ID}`);
            } else {
                console.log(`  ‚ö†Ô∏è  S·∫Ω theo d√µi t·∫•t c·∫£ chat (thi·∫øu TELEGRAM_GROUP_ID)`);
            }
            
            console.log('\n‚úÖ T·∫•t c·∫£ c·∫•u h√¨nh ƒë·ªÅu h·ª£p l·ªá! Bot s·∫µn s√†ng ch·∫°y.');
            console.log('\nüöÄ ƒê·ªÉ ch·∫°y bot, s·ª≠ d·ª•ng l·ªánh: npm start');
            process.exit(0);
        })
        .catch(error => {
            console.log(`  ‚ùå Bot token kh√¥ng h·ª£p l·ªá: ${error.message}`);
            process.exit(1);
        });
        
} catch (error) {
    console.log(`  ‚ùå L·ªói kh·ªüi t·∫°o bot: ${error.message}`);
    process.exit(1);
}
