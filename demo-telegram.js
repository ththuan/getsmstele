require('dotenv').config();
const TelegramMonitor = require('./telegram-monitor');

class TelegramDemo {
    constructor() {
        this.monitor = null;
    }

    async start() {
        console.log('ü§ñ Demo Telegram Monitor\n');

        // Ki·ªÉm tra config Telegram
        if (!process.env.TELEGRAM_BOT_TOKEN || process.env.TELEGRAM_BOT_TOKEN === 'your_telegram_bot_token_here') {
            console.log('‚ùå TELEGRAM_BOT_TOKEN ch∆∞a ƒë∆∞·ª£c c·∫•u h√¨nh');
            console.log('üìù ƒê·ªÉ test, h√£y:');
            console.log('1. T·∫°o bot v·ªõi @BotFather');
            console.log('2. C·∫≠p nh·∫≠t TELEGRAM_BOT_TOKEN trong file .env');
            console.log('3. Ch·∫°y l·∫°i: node demo-telegram.js\n');
            return;
        }

        this.monitor = new TelegramMonitor(
            process.env.TELEGRAM_BOT_TOKEN,
            process.env.TELEGRAM_GROUP_ID || 'demo'
        );

        // L·∫Øng nghe s·ª± ki·ªán t√¨m th·∫•y code
        this.monitor.on('referralCodeFound', (code) => {
            console.log(`üéØ DEMO: T√¨m th·∫•y code ${code} - s·∫Ω verify tr√™n SoDEX`);
        });

        console.log('‚úÖ Telegram monitor ƒëang kh·ªüi ƒë·ªông...');
        console.log('üì± H√£y g·ª≠i tin nh·∫Øn ch·ª©a code 8 k√Ω t·ª± v√†o group/chat v·ªõi bot');
        console.log('üìã V√≠ d·ª•: "Code m·ªõi: ABC12345" ho·∫∑c "ref: XYZ98765"');
        console.log('üõë Nh·∫•n Ctrl+C ƒë·ªÉ d·ª´ng\n');

        await this.monitor.start();

        // X·ª≠ l√Ω tho√°t
        process.on('SIGINT', () => {
            console.log('\nüõë D·ª´ng demo...');
            this.monitor.stop();
            process.exit(0);
        });
    }
}

// Test c√°c pattern matching
function testPatterns() {
    console.log('üß™ Test Pattern Matching:\n');
    
    const testMessages = [
        'Code m·ªõi: ABC12345',
        'ref: XYZ98765', 
        'referral code: QWE45678',
        'M√£ gi·ªõi thi·ªáu RTY56789',
        'ABC12345 l√† code m·ªõi',
        'H√¥m nay c√≥ code ZXC09876',
        'Code kh√¥ng h·ª£p l·ªá: 12345678', // to√†n s·ªë
        'Code kh√¥ng h·ª£p l·ªá: ABCDEFGH'  // to√†n ch·ªØ
    ];

    // T·∫°o instance monitor ƒë·ªÉ test
    const monitor = new TelegramMonitor('demo', 'demo');
    
    testMessages.forEach(msg => {
        const codes = monitor.extractReferralCodes(msg);
        console.log(`"${msg}"`);
        console.log(`  ‚Üí Codes t√¨m th·∫•y: ${codes.length > 0 ? codes.join(', ') : 'Kh√¥ng c√≥'}\n`);
    });
}

// Ch·∫°y demo
if (process.argv.includes('--test-patterns')) {
    testPatterns();
} else {
    const demo = new TelegramDemo();
    demo.start().catch(console.error);
}
