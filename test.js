require('dotenv').config();
const SodexClient = require('./sodex-client');

async function testSodexClient() {
    console.log('üß™ Test SoDEX Client...\n');

    // Test 1: Kh·ªüi t·∫°o v·ªõi private key gi·∫£
    console.log('Test 1: Private key validation');
    const badClient = new SodexClient(
        'https://testnet.sodex.com',
        'https://api.testnet.sodex.io', 
        'your_private_key_here'
    );
    
    const badResult = await badClient.initialize();
    console.log(`K·∫øt qu·∫£ v·ªõi private key gi·∫£: ${badResult ? '‚úÖ' : '‚ùå'}\n`);

    // Test 2: Kh·ªüi t·∫°o v·ªõi private key th·∫≠t (n·∫øu c√≥)
    if (process.env.PRIVATE_KEY && process.env.PRIVATE_KEY !== 'your_private_key_here') {
        console.log('Test 2: Private key th·∫≠t');
        const goodClient = new SodexClient(
            process.env.SODEX_BASE_URL || 'https://testnet.sodex.com',
            process.env.SODEX_API_URL || 'https://api.testnet.sodex.io',
            process.env.PRIVATE_KEY
        );
        
        const goodResult = await goodClient.initialize();
        console.log(`K·∫øt qu·∫£ v·ªõi private key th·∫≠t: ${goodResult ? '‚úÖ' : '‚ùå'}`);
        
        if (goodResult) {
            console.log(`Wallet address: ${goodClient.wallet.address}`);
            
            // Test ƒëƒÉng nh·∫≠p
            console.log('\nTest 3: ƒêƒÉng nh·∫≠p SoDEX');
            const loginResult = await goodClient.login();
            console.log(`K·∫øt qu·∫£ ƒëƒÉng nh·∫≠p: ${loginResult ? '‚úÖ' : '‚ùå'}`);
        }
    } else {
        console.log('Test 2: B·ªè qua (ch∆∞a c·∫•u h√¨nh private key th·∫≠t)');
    }

    console.log('\nüèÅ Test ho√†n th√†nh!');
}

testSodexClient().catch(console.error);
